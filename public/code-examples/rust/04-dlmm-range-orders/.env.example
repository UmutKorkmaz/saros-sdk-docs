# DLMM Range Orders Trading System Environment Variables
# Copy this file to .env and configure your settings

# ============================================================================
# REQUIRED SETTINGS
# ============================================================================

# Solana RPC endpoint URL
# Mainnet: https://api.mainnet-beta.solana.com
# Devnet: https://api.devnet.solana.com
# Testnet: https://api.testnet.solana.com
SOLANA_RPC_URL=https://api.mainnet-beta.solana.com

# Path to your Solana wallet keypair file
# Default Solana CLI location: ~/.config/solana/id.json
WALLET_PATH=~/.config/solana/id.json

# ============================================================================
# TRADING CONFIGURATION
# ============================================================================

# Default pool address for trading (optional)
# Example: SOL/USDC pool address
DEFAULT_POOL_ADDRESS=9WzDXwBbmkg8ZTbNMqUxvQRAyrZzDsGYdLVL9zYtAWWM

# Default slippage tolerance in basis points (100 = 1%)
DEFAULT_SLIPPAGE_BPS=100

# Bin step for DLMM calculations (basis points)
# Common values: 1 (0.01%), 5 (0.05%), 10 (0.1%), 20 (0.2%), 100 (1%)
BIN_STEP=20

# Base price for bin calculations
BASE_PRICE=100.0

# ============================================================================
# RISK MANAGEMENT
# ============================================================================

# Maximum position size per single order
MAX_POSITION_SIZE=1000.0

# Maximum total exposure across all active orders
MAX_TOTAL_EXPOSURE=10000.0

# Maximum number of active orders at any time
MAX_ACTIVE_ORDERS=50

# Maximum allowed slippage in basis points (500 = 5%)
MAX_SLIPPAGE_BPS=500

# Global stop loss percentage (applies to all positions)
GLOBAL_STOP_LOSS_PCT=5.0

# Daily loss limit (trading will pause if exceeded)
DAILY_LOSS_LIMIT=1000.0

# ============================================================================
# MONITORING & EXECUTION
# ============================================================================

# Polling interval for price updates in milliseconds
POLLING_INTERVAL_MS=1000

# Maximum price history length to keep in memory
MAX_HISTORY_LENGTH=1000

# Enable WebSocket connections for real-time updates
ENABLE_WEBSOCKET=false

# WebSocket endpoint (if different from RPC)
# WEBSOCKET_ENDPOINT=wss://api.mainnet-beta.solana.com

# Price change threshold for notifications (percentage)
PRICE_CHANGE_THRESHOLD_PCT=0.5

# Maximum concurrent order executions
MAX_CONCURRENT_EXECUTIONS=10

# Execution timeout in seconds
EXECUTION_TIMEOUT_SECS=30

# Maximum retry attempts for failed executions
MAX_RETRY_ATTEMPTS=3

# Gas strategy: standard, fast, economic, dynamic, or custom value
GAS_STRATEGY=dynamic

# ============================================================================
# PROTECTION FEATURES
# ============================================================================

# Enable slippage protection (will cancel orders with excessive slippage)
ENABLE_SLIPPAGE_PROTECTION=true

# Enable MEV (Maximal Extractable Value) protection
ENABLE_MEV_PROTECTION=true

# Enable smart routing for optimal execution
ENABLE_SMART_ROUTING=true

# Minimum liquidity threshold for order execution
MIN_LIQUIDITY_THRESHOLD=100.0

# Large trade detection threshold (in USD)
LARGE_TRADE_THRESHOLD=10000.0

# ============================================================================
# NOTIFICATIONS
# ============================================================================

# Enable notification system
ENABLE_NOTIFICATIONS=true

# General webhook URL for order notifications
WEBHOOK_URL=https://your-domain.com/webhook/orders

# Discord webhook for alerts
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your-webhook-id/your-webhook-token

# Slack webhook for notifications  
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/your/slack/webhook

# Email notifications (requires SMTP configuration)
ENABLE_EMAIL_NOTIFICATIONS=false
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
EMAIL_FROM=trading-bot@yourdomain.com
EMAIL_TO=alerts@yourdomain.com

# ============================================================================
# LOGGING & DEBUGGING
# ============================================================================

# Log level: error, warn, info, debug, trace
LOG_LEVEL=info

# Enable verbose logging
VERBOSE_LOGGING=false

# Log file path (optional, defaults to stdout)
LOG_FILE_PATH=./logs/trading-system.log

# Enable performance logging
ENABLE_PERFORMANCE_LOGGING=true

# Log rotation (daily, weekly, monthly)
LOG_ROTATION=daily

# ============================================================================
# ADVANCED SETTINGS
# ============================================================================

# Custom RPC timeout in seconds
RPC_TIMEOUT_SECS=30

# Maximum RPC retry attempts
MAX_RPC_RETRIES=3

# Connection pool size for RPC calls
RPC_POOL_SIZE=10

# Enable batch operations to reduce gas costs
ENABLE_BATCH_OPERATIONS=true

# Batch size for multi-order operations
BATCH_SIZE=5

# Enable order clustering for gas optimization
ENABLE_ORDER_CLUSTERING=true

# Network congestion detection threshold (execution time in ms)
CONGESTION_THRESHOLD_MS=10000

# ============================================================================
# DEVELOPMENT & TESTING
# ============================================================================

# Enable dry run mode (no actual transactions)
DRY_RUN_MODE=false

# Enable mock data for testing
USE_MOCK_DATA=false

# Test mode configuration
TEST_MODE=false

# Devnet/Testnet specific settings
DEVNET_MODE=false

# Enable additional debug output
DEBUG_BIN_CALCULATIONS=false
DEBUG_ORDER_EXECUTION=false
DEBUG_MARKET_DATA=false

# ============================================================================
# STRATEGY-SPECIFIC SETTINGS  
# ============================================================================

# DCA Ladder Defaults
DEFAULT_DCA_ORDERS=10
DEFAULT_DCA_DISTRIBUTION=weighted
DEFAULT_DCA_BIAS=1.5

# Grid Trading Defaults
DEFAULT_GRID_SPACING_BPS=50
DEFAULT_GRID_ORDERS_PER_SIDE=5
DEFAULT_TAKE_PROFIT_PCT=0.5
DEFAULT_REBALANCE_THRESHOLD_PCT=2.0

# Stop Loss Defaults
DEFAULT_TRAILING_STOP_PCT=2.0
DEFAULT_STOP_LOSS_CLOSE_PCT=100.0

# ============================================================================
# EXTERNAL SERVICES
# ============================================================================

# Price feed service (for additional price data)
PRICE_FEED_URL=https://api.coingecko.com/api/v3

# Market data provider
MARKET_DATA_PROVIDER=solana

# Analytics service endpoint
ANALYTICS_ENDPOINT=https://your-analytics-service.com

# Database connection (if using external database)
# DATABASE_URL=postgresql://user:password@localhost/dlmm_orders

# Redis connection for caching (optional)
# REDIS_URL=redis://localhost:6379

# ============================================================================
# BACKUP & RECOVERY
# ============================================================================

# Enable automatic state backup
ENABLE_STATE_BACKUP=true

# Backup interval in minutes
BACKUP_INTERVAL_MINUTES=60

# Backup directory
BACKUP_DIRECTORY=./backups

# Number of backup files to retain
BACKUP_RETENTION_COUNT=24

# ============================================================================
# ALERTS & MONITORING
# ============================================================================

# Health check endpoint port (for monitoring)
HEALTH_CHECK_PORT=8080

# Enable metrics collection
ENABLE_METRICS=true

# Metrics export port
METRICS_PORT=9090

# Alert on execution failure threshold
ALERT_FAILURE_THRESHOLD=5

# Alert on high slippage threshold (basis points)
ALERT_SLIPPAGE_THRESHOLD=200

# Alert on low balance threshold
ALERT_LOW_BALANCE_THRESHOLD=10.0

# ============================================================================
# NOTES
# ============================================================================

# 1. Make sure to set proper file permissions for .env file: chmod 600 .env
# 2. Never commit .env file to version control
# 3. Use environment-specific configurations for different deployments
# 4. Regularly rotate webhook URLs and API keys
# 5. Monitor disk space for log files and backups
# 6. Test all configurations in devnet before mainnet deployment